# DataSource settings: set here your own configurations for the database 
# connection. In this example we have "db_sql_test" as database name and 
# "root" as username and password.
spring.datasource.url = jdbc:mysql://127.0.0.1:3306/db_sql_test
spring.datasource.username = root
spring.datasource.password = 123456
spring.datasource.driver = com.mysql.jdbc.Driver

# Initialize or not
spring.datasource.initialize = true

# Initialize data source
spring.datasource.initialSize=50
spring.datasource.minIdle=10
spring.datasource.maxIdle=50
spring.datasource.maxActive=150

# Time out 
spring.datasource.maxWait=60000

# jpa
spring.jpa.database = MYSQL

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

spring.jpa.repositories.enabled = true

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect

## log
logging.level.com.trs.trsirp = DEBUG
logging.level.org.springframework.web = DEBUG
logging.level.org.hibernate=INFO
#logging.file = logs/logback.log

# SECURITY (SecurityProperties)
security.require-ssl = true

# Server Configuration
server.port = 8080
server.ssl.key-store = .keystore
server.ssl.key-store-password= 123456
server.ssl.keyStoreType= JKS
server.ssl.keyAlias: tomcat